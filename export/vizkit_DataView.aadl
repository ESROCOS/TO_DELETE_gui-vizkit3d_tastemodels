--------------------------------------------------------
--! File generated by asn2aadl v1.2359: DO NOT EDIT !
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
-- No more private heap required (we use the space certified compiler)
-- Memory_Required: 0


DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END Simulink_Tunable_Parameter;

DATA Timer
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Timer";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END Timer;

DATA TASTE_Directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END TASTE_Directive;


data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA Matrix3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 118; suggested aligned message buffer is...
    Source_Data_Size => 120 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix3d;

DATA Matrix3d_Buffer_Max
END Matrix3d_Buffer_Max;

DATA IMPLEMENTATION Matrix3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (120); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Matrix3d_Buffer_Max.impl;

DATA Matrix3d_Buffer
END Matrix3d_Buffer;

DATA IMPLEMENTATION Matrix3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix3d
SUBCOMPONENTS
    Buffer : data Matrix3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix3d_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt8_Buffer.impl;

DATA Vector2d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector2d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector2d;

DATA Vector2d_Buffer_Max
END Vector2d_Buffer_Max;

DATA IMPLEMENTATION Vector2d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector2d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Vector2d_Buffer_Max.impl;

DATA Vector2d_Buffer
END Vector2d_Buffer;

DATA IMPLEMENTATION Vector2d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector2d
SUBCOMPONENTS
    Buffer : data Vector2d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector2d_Buffer.impl;

DATA Vector4d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector4d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector4d;

DATA Vector4d_Buffer_Max
END Vector4d_Buffer_Max;

DATA IMPLEMENTATION Vector4d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector4d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Vector4d_Buffer_Max.impl;

DATA Vector4d_Buffer
END Vector4d_Buffer;

DATA IMPLEMENTATION Vector4d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector4d
SUBCOMPONENTS
    Buffer : data Vector4d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector4d_Buffer.impl;

DATA Isometry3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Isometry3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Isometry3d;

DATA Isometry3d_Buffer_Max
END Isometry3d_Buffer_Max;

DATA IMPLEMENTATION Isometry3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Isometry3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Isometry3d_Buffer_Max.impl;

DATA Isometry3d_Buffer
END Isometry3d_Buffer;

DATA IMPLEMENTATION Isometry3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Isometry3d
SUBCOMPONENTS
    Buffer : data Isometry3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Isometry3d_Buffer.impl;

DATA Affine3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Affine3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Affine3d;

DATA Affine3d_Buffer_Max
END Affine3d_Buffer_Max;

DATA IMPLEMENTATION Affine3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Affine3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Affine3d_Buffer_Max.impl;

DATA Affine3d_Buffer
END Affine3d_Buffer;

DATA IMPLEMENTATION Affine3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Affine3d
SUBCOMPONENTS
    Buffer : data Affine3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Affine3d_Buffer.impl;

DATA Transform3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Transform3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Transform3d;

DATA Transform3d_Buffer_Max
END Transform3d_Buffer_Max;

DATA IMPLEMENTATION Transform3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Transform3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Transform3d_Buffer_Max.impl;

DATA Transform3d_Buffer
END Transform3d_Buffer;

DATA IMPLEMENTATION Transform3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Transform3d
SUBCOMPONENTS
    Buffer : data Transform3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Transform3d_Buffer.impl;

DATA VectorXd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1301; suggested aligned message buffer is...
    Source_Data_Size => 1304 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "VectorXd";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END VectorXd;

DATA VectorXd_Buffer_Max
END VectorXd_Buffer_Max;

DATA IMPLEMENTATION VectorXd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type VectorXd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1304); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END VectorXd_Buffer_Max.impl;

DATA VectorXd_Buffer
END VectorXd_Buffer;

DATA IMPLEMENTATION VectorXd_Buffer.impl
    -- Buffer to hold a marshalled data of type VectorXd
SUBCOMPONENTS
    Buffer : data VectorXd_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END VectorXd_Buffer.impl;

DATA T_String
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 260; suggested aligned message buffer is...
    Source_Data_Size => 264 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-String";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END T_String;

DATA T_String_Buffer_Max
END T_String_Buffer_Max;

DATA IMPLEMENTATION T_String_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_String
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (264); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_String_Buffer_Max.impl;

DATA T_String_Buffer
END T_String_Buffer;

DATA IMPLEMENTATION T_String_Buffer.impl
    -- Buffer to hold a marshalled data of type T_String
SUBCOMPONENTS
    Buffer : data T_String_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_String_Buffer.impl;

DATA RigidBodyState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/RigidBodyState.asn");
    TASTE::Ada_Package_Name => "RigidBodyState_Types";
    Deployment::ASN1_Module_Name => "RigidBodyState-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1168; suggested aligned message buffer is...
    Source_Data_Size => 1168 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "RigidBodyState";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END RigidBodyState;

DATA RigidBodyState_Buffer_Max
END RigidBodyState_Buffer_Max;

DATA IMPLEMENTATION RigidBodyState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type RigidBodyState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1168); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END RigidBodyState_Buffer_Max.impl;

DATA RigidBodyState_Buffer
END RigidBodyState_Buffer;

DATA IMPLEMENTATION RigidBodyState_Buffer.impl
    -- Buffer to hold a marshalled data of type RigidBodyState
SUBCOMPONENTS
    Buffer : data RigidBodyState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END RigidBodyState_Buffer.impl;

DATA MatrixXd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 5214; suggested aligned message buffer is...
    Source_Data_Size => 5216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MatrixXd";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END MatrixXd;

DATA MatrixXd_Buffer_Max
END MatrixXd_Buffer_Max;

DATA IMPLEMENTATION MatrixXd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MatrixXd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (5216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MatrixXd_Buffer_Max.impl;

DATA MatrixXd_Buffer
END MatrixXd_Buffer;

DATA IMPLEMENTATION MatrixXd_Buffer.impl
    -- Buffer to hold a marshalled data of type MatrixXd
SUBCOMPONENTS
    Buffer : data MatrixXd_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MatrixXd_Buffer.impl;

DATA T_UInt16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt16";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt16;

DATA T_UInt16_Buffer_Max
END T_UInt16_Buffer_Max;

DATA IMPLEMENTATION T_UInt16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt16_Buffer_Max.impl;

DATA T_UInt16_Buffer
END T_UInt16_Buffer;

DATA IMPLEMENTATION T_UInt16_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt16
SUBCOMPONENTS
    Buffer : data T_UInt16_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt16_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

DATA T_UInt64
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt64";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt64;

DATA T_UInt64_Buffer_Max
END T_UInt64_Buffer_Max;

DATA IMPLEMENTATION T_UInt64_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt64
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt64_Buffer_Max.impl;

DATA T_UInt64_Buffer
END T_UInt64_Buffer;

DATA IMPLEMENTATION T_UInt64_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt64
SUBCOMPONENTS
    Buffer : data T_UInt64_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt64_Buffer.impl;

DATA Pose
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Pose.asn");
    TASTE::Ada_Package_Name => "Pose_Types";
    Deployment::ASN1_Module_Name => "Pose-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 92; suggested aligned message buffer is...
    Source_Data_Size => 96 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Pose";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Pose;

DATA Pose_Buffer_Max
END Pose_Buffer_Max;

DATA IMPLEMENTATION Pose_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Pose
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (96); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Pose_Buffer_Max.impl;

DATA Pose_Buffer
END Pose_Buffer;

DATA IMPLEMENTATION Pose_Buffer.impl
    -- Buffer to hold a marshalled data of type Pose
SUBCOMPONENTS
    Buffer : data Pose_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Pose_Buffer.impl;

DATA T_Int16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int16";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int16;

DATA T_Int16_Buffer_Max
END T_Int16_Buffer_Max;

DATA IMPLEMENTATION T_Int16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int16_Buffer_Max.impl;

DATA T_Int16_Buffer
END T_Int16_Buffer;

DATA IMPLEMENTATION T_Int16_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int16
SUBCOMPONENTS
    Buffer : data T_Int16_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int16_Buffer.impl;

DATA Vector6d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 79; suggested aligned message buffer is...
    Source_Data_Size => 80 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector6d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector6d;

DATA Vector6d_Buffer_Max
END Vector6d_Buffer_Max;

DATA IMPLEMENTATION Vector6d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector6d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Vector6d_Buffer_Max.impl;

DATA Vector6d_Buffer
END Vector6d_Buffer;

DATA IMPLEMENTATION Vector6d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector6d
SUBCOMPONENTS
    Buffer : data Vector6d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector6d_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int32_Buffer.impl;

DATA T_Double
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Double";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END T_Double;

DATA T_Double_Buffer_Max
END T_Double_Buffer_Max;

DATA IMPLEMENTATION T_Double_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Double
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Double_Buffer_Max.impl;

DATA T_Double_Buffer
END T_Double_Buffer;

DATA IMPLEMENTATION T_Double_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Double
SUBCOMPONENTS
    Buffer : data T_Double_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Double_Buffer.impl;

DATA T_Float
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Float";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END T_Float;

DATA T_Float_Buffer_Max
END T_Float_Buffer_Max;

DATA IMPLEMENTATION T_Float_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Float
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Float_Buffer_Max.impl;

DATA T_Float_Buffer
END T_Float_Buffer;

DATA IMPLEMENTATION T_Float_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Float
SUBCOMPONENTS
    Buffer : data T_Float_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Float_Buffer.impl;

DATA PoseUpdateThreshold
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Pose.asn");
    TASTE::Ada_Package_Name => "Pose_Types";
    Deployment::ASN1_Module_Name => "Pose-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 26; suggested aligned message buffer is...
    Source_Data_Size => 32 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PoseUpdateThreshold";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END PoseUpdateThreshold;

DATA PoseUpdateThreshold_Buffer_Max
END PoseUpdateThreshold_Buffer_Max;

DATA IMPLEMENTATION PoseUpdateThreshold_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PoseUpdateThreshold
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END PoseUpdateThreshold_Buffer_Max.impl;

DATA PoseUpdateThreshold_Buffer
END PoseUpdateThreshold_Buffer;

DATA IMPLEMENTATION PoseUpdateThreshold_Buffer.impl
    -- Buffer to hold a marshalled data of type PoseUpdateThreshold
SUBCOMPONENTS
    Buffer : data PoseUpdateThreshold_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END PoseUpdateThreshold_Buffer.impl;

DATA Quaterniond
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Quaterniond";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Quaterniond;

DATA Quaterniond_Buffer_Max
END Quaterniond_Buffer_Max;

DATA IMPLEMENTATION Quaterniond_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Quaterniond
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Quaterniond_Buffer_Max.impl;

DATA Quaterniond_Buffer
END Quaterniond_Buffer;

DATA IMPLEMENTATION Quaterniond_Buffer.impl
    -- Buffer to hold a marshalled data of type Quaterniond
SUBCOMPONENTS
    Buffer : data Quaterniond_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Quaterniond_Buffer.impl;

DATA Vector3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector3d;

DATA Vector3d_Buffer_Max
END Vector3d_Buffer_Max;

DATA IMPLEMENTATION Vector3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Vector3d_Buffer_Max.impl;

DATA Vector3d_Buffer
END Vector3d_Buffer;

DATA IMPLEMENTATION Vector3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector3d
SUBCOMPONENTS
    Buffer : data Vector3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector3d_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Boolean_Buffer.impl;

DATA Position2D
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Pose.asn");
    TASTE::Ada_Package_Name => "Pose_Types";
    Deployment::ASN1_Module_Name => "Pose-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Position2D";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Position2D;

DATA Position2D_Buffer_Max
END Position2D_Buffer_Max;

DATA IMPLEMENTATION Position2D_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Position2D
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Position2D_Buffer_Max.impl;

DATA Position2D_Buffer
END Position2D_Buffer;

DATA IMPLEMENTATION Position2D_Buffer.impl
    -- Buffer to hold a marshalled data of type Position2D
SUBCOMPONENTS
    Buffer : data Position2D_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Position2D_Buffer.impl;

DATA Matrix6d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 471; suggested aligned message buffer is...
    Source_Data_Size => 472 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix6d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix6d;

DATA Matrix6d_Buffer_Max
END Matrix6d_Buffer_Max;

DATA IMPLEMENTATION Matrix6d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix6d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (472); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Matrix6d_Buffer_Max.impl;

DATA Matrix6d_Buffer
END Matrix6d_Buffer;

DATA IMPLEMENTATION Matrix6d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix6d
SUBCOMPONENTS
    Buffer : data Matrix6d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix6d_Buffer.impl;

DATA Time
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Time.asn");
    TASTE::Ada_Package_Name => "Time_Types";
    Deployment::ASN1_Module_Name => "Time-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Time";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Time;

DATA Time_Buffer_Max
END Time_Buffer_Max;

DATA IMPLEMENTATION Time_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Time
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Time_Buffer_Max.impl;

DATA Time_Buffer
END Time_Buffer;

DATA IMPLEMENTATION Time_Buffer.impl
    -- Buffer to hold a marshalled data of type Time
SUBCOMPONENTS
    Buffer : data Time_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Time_Buffer.impl;

DATA Position
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Pose.asn");
    TASTE::Ada_Package_Name => "Pose_Types";
    Deployment::ASN1_Module_Name => "Pose-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Position";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Position;

DATA Position_Buffer_Max
END Position_Buffer_Max;

DATA IMPLEMENTATION Position_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Position
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Position_Buffer_Max.impl;

DATA Position_Buffer
END Position_Buffer;

DATA IMPLEMENTATION Position_Buffer.impl
    -- Buffer to hold a marshalled data of type Position
SUBCOMPONENTS
    Buffer : data Position_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Position_Buffer.impl;

DATA Matrix4d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix4d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix4d;

DATA Matrix4d_Buffer_Max
END Matrix4d_Buffer_Max;

DATA IMPLEMENTATION Matrix4d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix4d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Matrix4d_Buffer_Max.impl;

DATA Matrix4d_Buffer
END Matrix4d_Buffer;

DATA IMPLEMENTATION Matrix4d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix4d
SUBCOMPONENTS
    Buffer : data Matrix4d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix4d_Buffer.impl;

DATA Resolution
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Time.asn");
    TASTE::Ada_Package_Name => "Time_Types";
    Deployment::ASN1_Module_Name => "Time-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Resolution";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END Resolution;

DATA Resolution_Buffer_Max
END Resolution_Buffer_Max;

DATA IMPLEMENTATION Resolution_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Resolution
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Resolution_Buffer_Max.impl;

DATA Resolution_Buffer
END Resolution_Buffer;

DATA IMPLEMENTATION Resolution_Buffer.impl
    -- Buffer to hold a marshalled data of type Resolution
SUBCOMPONENTS
    Buffer : data Resolution_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Resolution_Buffer.impl;

DATA Matrix2d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix2d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix2d;

DATA Matrix2d_Buffer_Max
END Matrix2d_Buffer_Max;

DATA IMPLEMENTATION Matrix2d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix2d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Matrix2d_Buffer_Max.impl;

DATA Matrix2d_Buffer
END Matrix2d_Buffer;

DATA IMPLEMENTATION Matrix2d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix2d
SUBCOMPONENTS
    Buffer : data Matrix2d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix2d_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int8_Buffer.impl;

DATA Orientation
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Pose.asn");
    TASTE::Ada_Package_Name => "Pose_Types";
    Deployment::ASN1_Module_Name => "Pose-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Orientation";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Orientation;

DATA Orientation_Buffer_Max
END Orientation_Buffer_Max;

DATA IMPLEMENTATION Orientation_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Orientation
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Orientation_Buffer_Max.impl;

DATA Orientation_Buffer
END Orientation_Buffer;

DATA IMPLEMENTATION Orientation_Buffer.impl
    -- Buffer to hold a marshalled data of type Orientation
SUBCOMPONENTS
    Buffer : data Orientation_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Orientation_Buffer.impl;

DATA AngleAxisd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AngleAxisd";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END AngleAxisd;

DATA AngleAxisd_Buffer_Max
END AngleAxisd_Buffer_Max;

DATA IMPLEMENTATION AngleAxisd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AngleAxisd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AngleAxisd_Buffer_Max.impl;

DATA AngleAxisd_Buffer
END AngleAxisd_Buffer;

DATA IMPLEMENTATION AngleAxisd_Buffer.impl
    -- Buffer to hold a marshalled data of type AngleAxisd
SUBCOMPONENTS
    Buffer : data AngleAxisd_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AngleAxisd_Buffer.impl;

DATA T_Int64
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int64";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int64;

DATA T_Int64_Buffer_Max
END T_Int64_Buffer_Max;

DATA IMPLEMENTATION T_Int64_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int64
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int64_Buffer_Max.impl;

DATA T_Int64_Buffer
END T_Int64_Buffer;

DATA IMPLEMENTATION T_Int64_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int64
SUBCOMPONENTS
    Buffer : data T_Int64_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int64_Buffer.impl;

DATA VizkitPluginLabel
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/sargon/vizkit/VizkitPlugins.asn");
    TASTE::Ada_Package_Name => "Vizkit3D_Types";
    Deployment::ASN1_Module_Name => "Vizkit3D-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 32; suggested aligned message buffer is...
    Source_Data_Size => 32 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "VizkitPluginLabel";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END VizkitPluginLabel;

DATA VizkitPluginLabel_Buffer_Max
END VizkitPluginLabel_Buffer_Max;

DATA IMPLEMENTATION VizkitPluginLabel_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type VizkitPluginLabel
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END VizkitPluginLabel_Buffer_Max.impl;

DATA VizkitPluginLabel_Buffer
END VizkitPluginLabel_Buffer;

DATA IMPLEMENTATION VizkitPluginLabel_Buffer.impl
    -- Buffer to hold a marshalled data of type VizkitPluginLabel
SUBCOMPONENTS
    Buffer : data VizkitPluginLabel_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END VizkitPluginLabel_Buffer.impl;

DATA VizkitFilePath
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/sargon/vizkit/VizkitPlugins.asn");
    TASTE::Ada_Package_Name => "Vizkit3D_Types";
    Deployment::ASN1_Module_Name => "Vizkit3D-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 256; suggested aligned message buffer is...
    Source_Data_Size => 256 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "VizkitFilePath";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END VizkitFilePath;

DATA VizkitFilePath_Buffer_Max
END VizkitFilePath_Buffer_Max;

DATA IMPLEMENTATION VizkitFilePath_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type VizkitFilePath
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (256); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END VizkitFilePath_Buffer_Max.impl;

DATA VizkitFilePath_Buffer
END VizkitFilePath_Buffer;

DATA IMPLEMENTATION VizkitFilePath_Buffer.impl
    -- Buffer to hold a marshalled data of type VizkitFilePath
SUBCOMPONENTS
    Buffer : data VizkitFilePath_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END VizkitFilePath_Buffer.impl;

DATA Pose2D
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/assert/sargon/SARGON/workshop_demo/asn1-types/asn/base/Pose.asn");
    TASTE::Ada_Package_Name => "Pose_Types";
    Deployment::ASN1_Module_Name => "Pose-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Pose2D";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Pose2D;

DATA Pose2D_Buffer_Max
END Pose2D_Buffer_Max;

DATA IMPLEMENTATION Pose2D_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Pose2D
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Pose2D_Buffer_Max.impl;

DATA Pose2D_Buffer
END Pose2D_Buffer;

DATA IMPLEMENTATION Pose2D_Buffer.impl
    -- Buffer to hold a marshalled data of type Pose2D
SUBCOMPONENTS
    Buffer : data Pose2D_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Pose2D_Buffer.impl;

end DataView;
